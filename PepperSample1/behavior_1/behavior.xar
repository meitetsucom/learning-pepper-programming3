<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Input name="PepperSay/ToPepper" type="0" type_size="1" nature="4" stm_value_name="PepperSay/ToPepper" inner="1" tooltip="PepperSay/ToPepper desc" id="4" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックスBehaviorの終了時に信号を送る。" id="5" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="100">
                        <Box name="JSON" id="6" localization="8" tooltip="" x="84" y="124">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, JsonText):
        #ボタンから送られてきた文字列を、JSONデータに変換
        try:
            JsonData = json.JSONDecoder().decode(JsonText)
        except ValueError:
            #変換できなかった場合、ログに送信されてきた値を表示
            self.logger.error(JsonText)
            return
        #JSON形式に変換できた場合
        #それぞれの設定したキーに紐づいた値を取得
        buttonData = JsonData['button'].encode("utf8")
        sayData = JsonData['say'].encode("utf8")
        #Timelineボックス(Pepperを動かすボックス)に値を送信
        self.onStopped(buttonData)
        #Say Textボックス(Pepperに言葉話させるボックス)に値を送信
        self.onStopped2(sayData)]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る。" id="4" />
                            <Output name="onStopped2" type="0" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                            <Output name="Error" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                        </Box>
                        <Box name="Say Text" id="7" localization="8" tooltip="Say the text received on its input." x="357" y="245">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="135" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                            <Resource name="Speech" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Timeline" id="5" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="629" y="91">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="152">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="21" value="-21.6211" />
                                        <Key frame="36" value="-21.6211" />
                                        <Key frame="51" value="-21.6211" />
                                        <Key frame="64" value="14.502" />
                                        <Key frame="76" value="-21.6211" />
                                        <Key frame="98" value="14.502" />
                                        <Key frame="128" value="-21.6211" />
                                        <Key frame="152" value="-11.4258" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="21" value="0.79102" />
                                        <Key frame="36" value="0.79102" />
                                        <Key frame="51" value="0.79102" />
                                        <Key frame="64" value="22.5879" />
                                        <Key frame="76" value="0.79102" />
                                        <Key frame="98" value="22.5879" />
                                        <Key frame="128" value="0.79102" />
                                        <Key frame="152" value="-0.175782" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0">
                                        <Key frame="21" value="-1.66993" />
                                        <Key frame="36" value="-1.05469" />
                                        <Key frame="51" value="-1.66993" />
                                        <Key frame="64" value="-1.75782" />
                                        <Key frame="76" value="-1.66993" />
                                        <Key frame="98" value="-1.75782" />
                                        <Key frame="128" value="-1.66993" />
                                        <Key frame="152" value="-1.66993" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0">
                                        <Key frame="21" value="-0.351563" />
                                        <Key frame="36" value="0" />
                                        <Key frame="51" value="-0.263673" />
                                        <Key frame="64" value="0.351563" />
                                        <Key frame="76" value="-0.263673" />
                                        <Key frame="98" value="0.351563" />
                                        <Key frame="128" value="-0.263673" />
                                        <Key frame="152" value="-0.439454" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0">
                                        <Key frame="21" value="1.31836" />
                                        <Key frame="36" value="1.31836" />
                                        <Key frame="51" value="0.703128" />
                                        <Key frame="64" value="0" />
                                        <Key frame="76" value="0.703128" />
                                        <Key frame="98" value="0" />
                                        <Key frame="128" value="0.703128" />
                                        <Key frame="152" value="-0.351564" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="21" value="-24.6094" />
                                        <Key frame="36" value="-50.7129" />
                                        <Key frame="51" value="-3.77929" />
                                        <Key frame="64" value="-0.5" />
                                        <Key frame="76" value="-3.77929" />
                                        <Key frame="98" value="-0.5" />
                                        <Key frame="128" value="-3.77929" />
                                        <Key frame="152" value="-30.3223" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="21" value="-109.424" />
                                        <Key frame="36" value="-118.916" />
                                        <Key frame="51" value="-109.775" />
                                        <Key frame="64" value="-69.1698" />
                                        <Key frame="76" value="-109.775" />
                                        <Key frame="98" value="-69.1698" />
                                        <Key frame="128" value="-109.775" />
                                        <Key frame="152" value="-69.9609" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="21" value="0.595782" />
                                        <Key frame="36" value="0.595782" />
                                        <Key frame="51" value="0.962214" />
                                        <Key frame="64" value="0.584359" />
                                        <Key frame="76" value="0.962214" />
                                        <Key frame="98" value="0.584359" />
                                        <Key frame="128" value="0.962214" />
                                        <Key frame="152" value="0.608084" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="21" value="73.3884" />
                                        <Key frame="36" value="-4.7461" />
                                        <Key frame="51" value="-83.0565" />
                                        <Key frame="64" value="-85.3421" />
                                        <Key frame="76" value="-83.0565" />
                                        <Key frame="98" value="-85.3421" />
                                        <Key frame="128" value="-83.0565" />
                                        <Key frame="152" value="89.2969" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="21" value="23.291" />
                                        <Key frame="36" value="33.75" />
                                        <Key frame="51" value="9.58008" />
                                        <Key frame="64" value="38.2324" />
                                        <Key frame="76" value="9.58008" />
                                        <Key frame="98" value="38.2324" />
                                        <Key frame="128" value="9.58008" />
                                        <Key frame="152" value="8.08593" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="21" value="-26.7215" />
                                        <Key frame="36" value="61.346" />
                                        <Key frame="51" value="101.249" />
                                        <Key frame="64" value="61.0825" />
                                        <Key frame="76" value="101.249" />
                                        <Key frame="98" value="61.0825" />
                                        <Key frame="128" value="101.249" />
                                        <Key frame="152" value="0.700723" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="21" value="70.8399" />
                                        <Key frame="36" value="70.8399" />
                                        <Key frame="51" value="70.8399" />
                                        <Key frame="64" value="28.7403" />
                                        <Key frame="76" value="70.8399" />
                                        <Key frame="98" value="28.7403" />
                                        <Key frame="128" value="70.8399" />
                                        <Key frame="152" value="30.0586" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="21" value="95.3614" />
                                        <Key frame="36" value="95.3614" />
                                        <Key frame="51" value="95.3614" />
                                        <Key frame="64" value="68.3791" />
                                        <Key frame="76" value="95.3614" />
                                        <Key frame="98" value="68.3791" />
                                        <Key frame="128" value="95.3614" />
                                        <Key frame="152" value="70.5762" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="21" value="0.594025" />
                                        <Key frame="36" value="0.594025" />
                                        <Key frame="51" value="0.594025" />
                                        <Key frame="64" value="0.336555" />
                                        <Key frame="76" value="0.594025" />
                                        <Key frame="98" value="0.336555" />
                                        <Key frame="128" value="0.594025" />
                                        <Key frame="152" value="0.594025" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="21" value="102.92" />
                                        <Key frame="36" value="102.92" />
                                        <Key frame="51" value="102.92" />
                                        <Key frame="64" value="89.912" />
                                        <Key frame="76" value="102.92" />
                                        <Key frame="98" value="89.912" />
                                        <Key frame="128" value="102.92" />
                                        <Key frame="152" value="89.4726" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="21" value="-0.5" />
                                        <Key frame="36" value="-0.5" />
                                        <Key frame="51" value="-0.5" />
                                        <Key frame="64" value="-7.11917" />
                                        <Key frame="76" value="-0.5" />
                                        <Key frame="98" value="-7.11917" />
                                        <Key frame="128" value="-0.5" />
                                        <Key frame="152" value="-7.99804" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="21" value="-14.7682" />
                                        <Key frame="36" value="-14.7682" />
                                        <Key frame="51" value="-14.7682" />
                                        <Key frame="64" value="10.3688" />
                                        <Key frame="76" value="-14.7682" />
                                        <Key frame="98" value="10.3688" />
                                        <Key frame="128" value="-14.7682" />
                                        <Key frame="152" value="-1.32078" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Switch Case" id="8" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="353" y="90">
                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("bye")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                            </script>
                            <pluginContent>
                                <keywords>
                                    <keyword>&quot;bye&quot;</keyword>
                                    <keyword></keyword>
                                </keywords>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                            <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                        </Box>
                        <Box name="Show App" id="2" localization="8" tooltip="Loads the application on the tablet, if it exists, and displays the webview.&#x0A;&#x0A;V1.0.0&#x0A;" x="117" y="0">
                            <bitmap>media/images/box/root.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[

class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.isRunning = False
        self.frameManager = None
        try:
            self.frameManager = ALProxy("ALFrameManager")
        except Exception as e:
            self.logger.error(e)

    def onUnload(self):
        self.isRunning = False

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def onInput_onStart(self):
        if self.isRunning:
            return # already running, nothing to do
        self.isRunning = True
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        appName = self.packageUid()
        state = False
        if appName:
            if tabletService:
                if tabletService.loadApplication(appName):
                    self.logger.info("Successfully set application: %s" % appName)
                    tabletService.showWebview()
                    state = True
                else:
                    self.logger.warning("Got tablet service, but failed to set application: %s" % appName)
            else:
                self.logger.warning("Couldn't find tablet service, so can't set application: %s" % appName)
        if state:
            self.onSuccess()
        else:
            self.onFailure()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onSuccess" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished successfully." id="3" />
                            <Output name="onFailure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished unsuccessfully." id="4" />
                        </Box>
                        <Box name="Show App_Comment" id="1" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="226" y="0">
                            <bitmap>media/images/box/box-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Pepperの胸のタブレットに\n挨拶を表示させる")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>
                                    <![CDATA[Pepperの胸のタブレットに
挨拶を表示させる]]>
</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        </Box>
                        <Box name="JSON_Comment" id="3" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="38" y="225">
                            <bitmap>media/images/box/box-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("JSONの値を処理する")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>
                                    <![CDATA[JSONの値を処理する]]>
</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        </Box>
                        <Box name="Switch Case_Comment" id="4" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="336" y="163">
                            <bitmap>media/images/box/box-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("ボタンや処理が複数になった場合の処理を行う")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>
                                    <![CDATA[ボタンや処理が複数になった場合の処理を行う]]>
</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        </Box>
                        <Box name="Say Text_Comment" id="9" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="357" y="341">
                            <bitmap>media/images/box/box-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Pepperがボタンに応じた言葉を\n話す")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>
                                    <![CDATA[Pepperがボタンに応じた言葉を
話す]]>
</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        </Box>
                        <Box name="Timeline_Comment" id="10" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="584" y="188">
                            <bitmap>media/images/box/box-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Pepperがボタンに応じた動きをする")]]>
</content>
                            </script>
                            <pluginContent>
                                <text>
                                    <![CDATA[Pepperがボタンに応じた動きをする]]>
</text>
                            </pluginContent>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        </Box>
                        <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="5" />
                        <Link inputowner="8" indexofinput="2" outputowner="6" indexofoutput="4" />
                        <Link inputowner="5" indexofinput="2" outputowner="8" indexofoutput="4" />
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
